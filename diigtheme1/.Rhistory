# name = the name of the font in Google's Library (https://fonts.google.com)
# family = how you want to refer to the font inside R
# regular.wt = the weight of font used in axis, labels etc.
# bolt.wt = the weight of font used in the title
# Perhaps the only tricky bit is remembering to run the following function to enable webfonts
showtext.auto()
#Make Background and Grid#############################################
######################################################################
theme_diigplot <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
)
}
#Make Text############################################################
######################################################################
theme_diigtext <- function() {
theme(plot.title = element_text(
family = "Barrio",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Barrio",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Barrio",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(0,15,0,0)))
}
#Make Legend##########################################################
######################################################################
theme_diiglegend <- function() {
theme(legend.text = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")) #+
#  guides(fill=guide_legend(keywidth = 1.5, keyheight = 1.5))
}
#Full Theme############################################################
#######################################################################
#Attempt to download font directly and then import into theme
#download.file("'https://fonts.googleapis.com/css?family=Open+Sans'", "/Library/Fonts/Barrio.ttf", method="curl")
#font_import(pattern = 'Barrio.ttf', prompt=FALSE)
diiggraph <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
) +
theme(plot.title = element_text(
family = "Barrio",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Barrio",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Barrio",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(0,15,0,0))
) +
theme(legend.text = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")
)
}
library(ggplot2)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
fonts()
library(extrafonts)
#'Theme for DIIG
#'
#'@title Theme for DIIG
#'@description Theme for DIIG that creates standardized background,  gird, and legend.
#Make Background and Grid#############################################
######################################################################
theme_diigplot <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
)
}
#Make Text############################################################
######################################################################
theme_diigtext <- function() {
theme(plot.title = element_text(
family = "Barrio",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Barrio",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Barrio",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(0,15,0,0)))
}
#Make Legend##########################################################
######################################################################
theme_diiglegend <- function() {
theme(legend.text = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")) #+
#  guides(fill=guide_legend(keywidth = 1.5, keyheight = 1.5))
}
#Full Theme############################################################
#######################################################################
#Attempt to download font directly and then import into theme
#download.file("'https://fonts.googleapis.com/css?family=Open+Sans'", "/Library/Fonts/Barrio.ttf", method="curl")
#font_import(pattern = 'Barrio.ttf', prompt=FALSE)
diiggraph <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
) +
theme(plot.title = element_text(
family = "Barrio",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Barrio",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Barrio",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Barrio",
margin = margin(0,15,0,0))
) +
theme(legend.text = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Barrio",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")
)
}
library(ggplot2)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
warnings""
Warnings()
warnings()
library(diigtheme1)
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library("extrafont", lib.loc="C:/Program Files/R/R-3.3.2/library")
detach("package:extrafont", unload=TRUE)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(diigtheme1)
library(diigtheme1)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph1()
library(diigtheme1)
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
#'Theme for DIIG
#'
#'@title Theme for DIIG
#'@description Theme for DIIG that creates standardized background,  gird, and legend.
#'onLoad(packageStartupmessage("See REGISTER GOOGLE FONTS for instructions of how to
#'register newly downloaded google fonts into windows font database"))
#Make Background and Grid#############################################
######################################################################
theme_diigplot <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
)
}
#Make Text############################################################
######################################################################
theme_diigtext <- function() {
theme(plot.title = element_text(
family = "Source Sans Pro",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Source Sans Pro",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Source Sans Pro",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Source Sans Pro",
margin = margin(0,15,0,0)))
}
#Make Legend##########################################################
######################################################################
theme_diiglegend <- function() {
theme(legend.text = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")) #+
#  guides(fill=guide_legend(keywidth = 1.5, keyheight = 1.5))
}
#Full Theme############################################################
#######################################################################
diiggraph <- function() {
theme(panel.border = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white", color="white"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(size=.1, color="lightgray"),
panel.grid.minor.y = element_line(size=.1, color="lightgray"),
axis.ticks = element_blank()
) +
theme(plot.title = element_text(
family = "Source Sans Pro",
color = "#554449",
size = 26, face="bold",
margin=margin(20,0,20,0),
hjust = 0.5)) +
theme(axis.text.x = element_text(
size = 15,
family = "Source Sans Pro",
vjust = 7,
margin = margin(-10,0,0,0))) +
theme(axis.text.y = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449",
margin = margin(0,5,0,0))) +
theme(axis.title.x = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Source Sans Pro",
margin = margin(15,0,0,60))) +
theme(axis.title.y = element_text(
size = 16,
face = "bold",
color = "#554449",
family = "Source Sans Pro",
margin = margin(0,15,0,0))
) +
theme(legend.text = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449")) +
theme(legend.title = element_text(
size = 15,
family = "Source Sans Pro",
color ="#554449")) +
theme(legend.position = 'bottom') +
theme(legend.background = element_rect(fill = "white")
)
}
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
library(diigtheme1)
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
library(ggplot2)
library(extrafont)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear)))
library(ggplot2)
library(diigtheme1)
ggplot(mtcars) +
geom_point(aes(x = wt, y = mpg, colour=factor(gear))) +
diigtheme1:::diiggraph()
